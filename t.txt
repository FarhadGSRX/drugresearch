        try:
            # Pronunciation Available
            name = driver.find_element_by_class_name('pronounce-title').text
        except Exception:
            # Pronunciation Unavailable
            name = driver.find_element_by_css_selector('#content > div.contentBox > h1').text
        try:
            # Subtitle available having brand name and information
            text = driver.find_element_by_class_name('drug-subtitle').text.split('\n')
        except Exception:
            # Information Unavailable, leaving it as blank
            text = []
        drugsInfo.append([name, text])




            with tqdm(total=len(drugView)) as drugsDotComBar:
        for link in drugView:
            try:
                webPage = requests.get(link, timeout=100).text
                soup = BeautifulSoup(webPage)
                bulk = soup.find('p', attrs={'class': 'drug-subtitle'}).text
                drugsInfo.append(bulk + '|' + link)
            except Exception:
                # Issue 02 - 3 types of cases can occur:
                name = soup.select('#content > div.contentBox > h1')
                if name == []:
                    name = soup.select('#content > div.contentBox > div.pronounce-title.clearAfter > h1')

                # In the U.S.
                text = webPage[webPage.find('In the U.S.</b></p>'):webPage.find('In the U.S.</b></p>') + 500]

                # In the Canada
                if text == []:
                    text = webPage[webPage.find('In Canada</b></p>'):webPage.find('In Canada</b></p>') + 500]

                if 'Brand Names: U.S.' in webPage:
                    text = webPage[
                           webPage.find('<h2>Brand Names: U.S.</h2>'):webPage.find('<h2>Brand Names: U.S.</h2>') + 500]
                bulk = str(name) + '|' + str(text) + '|' + link
            print(bulk)
            drugsDotComBar.update(1)